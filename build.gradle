// Clean
// ./gradlew clean

// Build
// ./gradlew build

// OSSRH publication
// Sometimes the release process fails and manual release is necessary on https://oss.sonatype.org/#stagingRepositories
// ./gradlew build -Prelease uploadArchives closeAndPromoteRepository

// To publish this plugin to the gradle plugin repo:
// ./gradlew publishPlugins

// To publish this plugin in the local maven repo:

// ./gradlew install

// (To publish this plugin to maven central:)
// (./gradlew publish)


buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.12.0'
}

apply plugin: 'maven'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'signing'
// apply plugin: 'maven-publish'


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

// Signature of artifacts
signing {
    sign configurations.archives
}

// OSSRH publication
// ./gradlew build -Prelease uploadArchives closeAndPromoteRepository
uploadArchives {
    repositories {
        mavenDeployer {
            // POM signature
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            // Target repository
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            pom.project {
                name project.name
                description project.description
                packaging 'jar'
                url 'https://github.com/atomicbits/scraml-gradle-plugin'

                scm {
                    connection 'scm:git:https://github.com/atomicbits/scraml-gradle-plugin.git'
                    developerConnection 'scm:git:git@github.com:atomicbits/scraml-gradle-plugin.git'
                    url 'https://github.com/atomicbits/scraml-gradle-plugin.git'
                }

                licenses {
                    license {
                        name 'AGPLv3 or Scraml EULA'
                        url 'https://www.gnu.org/licenses/agpl-3.0.en.html'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'rigolepe'
                        name = 'Peter Rigole'
                        email = 'peter.rigole@atomicbits.io'
                    }
                }

            }
        }
    }
}

nexusStaging {
    username = ossrhUser
    password = ossrhPassword
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    google()
}

// Unless overridden in the pluginBundle config DSL, the project version will be used as your plugin version when publishing
version = "0.9.0" // <change in 1 place>
group = "io.atomicbits"


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.atomicbits'


dependencies {

    compile gradleApi()

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    compile (
            group: 'io.atomicbits',
            name: 'scraml-generator_2.12',
            version: version // Same as this project's version! 
    )
    compile 'com.android.tools.build:gradle:3.0.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// Maven publishing
// ./gradlew publish
// See http://nemerosa.ghost.io/2015/07/01/publishing-to-the-maven-central-using-gradle/
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//}

// publish this plugin to Gradle:
//  ./gradlew publishPlugins
// see https://plugins.gradle.org/docs/publish-plugin
// Note: we use maven as the plugin repo.
pluginBundle {

    website = 'https://github.com/atomicbits/scraml-gradle-plugin'
    vcsUrl = 'https://github.com/atomicbits/scraml-gradle-plugin.git'

    plugins {

        scramlPlugin {
            id = 'io.atomicbits.scraml'
            displayName = 'Scraml code generator plugin'
            description = 'Scraml code generator plugin'
            tags = ['scraml', 'raml', 'json-schema', 'REST client', 'http client']
        }
    }
}
